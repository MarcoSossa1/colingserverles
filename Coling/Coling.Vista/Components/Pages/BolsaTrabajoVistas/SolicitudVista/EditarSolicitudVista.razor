@page "/solicitud/editar/{id}"
@using Coling.Shared
@inject ISolicitudService solicitudService
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Editar Solicitud</h3>

@if (solicitud != null)
{
    <EditForm EditContext="contextoEdicion" OnValidSubmit="EditarSolicitud">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label>Id Afiliado:</label>
            <div>
                <InputNumber class="form-control" @bind-Value="@solicitud.IdAfiliado" />
                <ValidationMessage For="@(() => solicitud.IdAfiliado)" />
            </div>
        </div>
        <div class="mb-3">
            <label>Id Oferta:</label>
            <div>
                <InputNumber class="form-control" @bind-Value="@solicitud.IdOferta" />
                <ValidationMessage For="@(() => solicitud.IdOferta)" />
            </div>
        </div>
        <div class="mb-3">
            <label>Nombre:</label>
            <div>
                <InputText class="form-control" @bind-Value="@solicitud.Nombre" />
                <ValidationMessage For="@(() => solicitud.Nombre)" />
            </div>
        </div>
        <div class="mb-3">
            <label>Fecha de Postulación:</label>
            <div>
                <InputDate class="form-control" @bind-Value="@solicitud.FechaPostulacion" />
                <ValidationMessage For="@(() => solicitud.FechaPostulacion)" />
            </div>
        </div>
        <div class="mb-3">
            <label>Pretensión Salarial:</label>
            <div>
                <InputNumber class="form-control" @bind-Value="@solicitud.PretencionSalarial" />
                <ValidationMessage For="@(() => solicitud.PretencionSalarial)" />
            </div>
        </div>
        <div class="mb-3">
            <label>Acerca de:</label>
            <div>
                <InputText class="form-control" @bind-Value="@solicitud.Acercade" />
                <ValidationMessage For="@(() => solicitud.Acercade)" />
            </div>
        </div>
        <div class="mb-3">
            <label>Estado:</label>
            <div>
                <select class="form-control" @bind="@solicitud.Estado">
                    <option value="Activo">Activo</option>
                    <option value="Inactivo">Inactivo</option>
                </select>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Guardar</button>
        <button class="btn btn-primary" @onclick="CancelarEdicion">Cancelar</button>
    </EditForm>
}
else
{
    <p>Cargando...</p>
}

@code {
    private EditContext contextoEdicion;
    private Solicitud solicitud;

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(id))
        {
            string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoibWFyY28iLCJyb2wiOiJBZG1pbiIsImVzdGFkbyI6IkFjdGl2byIsImV4cCI6MTcxNDY5ODU1N30.MXG3tCUNsze-FNZo_E-2D7SJpOLPCclRbNvnbU1P4iY";
            solicitud = await solicitudService.ObtenerSolicitudPorId(id, token);
            if (solicitud != null)
            {
                contextoEdicion = new EditContext(solicitud);
            }
        }
    }

    private async Task EditarSolicitud()
    {
        if (contextoEdicion.Validate())
        {
            string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoibWFyY28iLCJyb2wiOiJBZG1pbiIsImVzdGFkbyI6IkFjdGl2byIsImV4cCI6MTcxNDY5ODU1N30.MXG3tCUNsze-FNZo_E-2D7SJpOLPCclRbNvnbU1P4iY";
            bool exito = await solicitudService.EditarSolicitud(solicitud, token);

            if (exito)
            {
                navigationManager.NavigateTo("/solicitudes");
            }
            else
            {
                await sweetAlertService.FireAsync("Error", "No se pudo editar la solicitud", SweetAlertIcon.Error);
            }
        }
    }

    private async Task CancelarEdicion()
    {
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Está seguro de cancelar la edición? Los cambios no guardados se perderán.",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Sí"
            });

        if (!string.IsNullOrEmpty(result.Value))
        {
            navigationManager.NavigateTo("/solicitudes", forceLoad: true);
        }
    }
}
