@page "/institucion/crear"
@inject IInstitucionService servicioInstitucion
@inject NavigationManager nav
@inject SweetAlertService sweetAlertService

<h3>Crear Institucion</h3>

<EditForm EditContext="contextoEdicion" >
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Nombre:</label>
        <div>
            <InputText class="form-control" @bind-Value="@institucion.Nombre" />
            <ValidationMessage For="@(() => institucion.Nombre)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Tipo:</label>
        <div>
            <InputText class="form-control" @bind-Value="@institucion.Tipo" />
            <ValidationMessage For="@(() => institucion.Tipo)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Direccion:</label>
        <div>
            <InputText class="form-control" @bind-Value="@institucion.Direccion" />
            <ValidationMessage For="@(() => institucion.Direccion)" />
        </div>
    </div>
    <button class="btn btn-primary" @onclick="CrearInstitucion">Guardar</button>
    <button class="btn btn-primary" @onclick="CancelarEdicion">Cancelar</button>
</EditForm>

@code {
    private EditContext contextoEdicion;
    private Institucion institucion = new();

    protected override void OnInitialized()
    {
        contextoEdicion = new EditContext(institucion);
    }

    private async Task CrearInstitucion()
    {
        if (contextoEdicion.Validate())
        {
            string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoibWFyY28iLCJyb2wiOiJBZG1pbiIsImVzdGFkbyI6IkFjdGl2byIsImV4cCI6MTcxNDY5ODU1N30.MXG3tCUNsze-FNZo_E-2D7SJpOLPCclRbNvnbU1P4iY";
            institucion.PartitionKey = "Educacion";
            institucion.Estado = "Activo";
            var respuesta = await servicioInstitucion.InsertarInstitucion(institucion, token);
            if (!respuesta)
            {
                await sweetAlertService.FireAsync("Error", "No se pudo guardar", SweetAlertIcon.Error);
                return;
            }
            nav.NavigateTo("/instituciones", forceLoad: true);
        }
    }
    private async Task CancelarEdicion()
    {
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Está seguro de cancelar la creación de la institución? Los cambios no guardados se perderán.",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Sí"
            });

        if (!string.IsNullOrEmpty(result.Value))
        {
            nav.NavigateTo("/instituciones", forceLoad: true);
        }
    }
}
